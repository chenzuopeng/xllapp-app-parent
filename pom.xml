<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xllapp</groupId>
	<artifactId>xllapp-app-parent</artifactId>
	<version>1.1.0-beta</version>
	<packaging>pom</packaging>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<url>${releases.repository.url}</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<url>${snapshots.repository.url}</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<!-- 项目的编码 -->
		<project.encoding>UTF-8</project.encoding>
		<!-- jdk 版本 -->
		<jdk.version>1.6</jdk.version>
		<!-- 进程标示,方便在启停脚本中处理本程序的虚拟机进程 -->
		<process.flag>${project.artifactId}-${project.version}</process.flag>
		<!-- 本地保存应用其它组件的目录 -->
		<support.dir>${project.build.directory}/support</support.dir>
		<!-- 本地保存最终生成的脚本文件的目录 -->
		<script.dir>${project.build.directory}/scripts</script.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.xllapp</groupId>
			<artifactId>xllapp-app-core</artifactId>
			<version>1.1.0-beta</version>
		</dependency>
		<dependency>
			<groupId>org.xllapp</groupId>
			<artifactId>xllapp-app-launcher</artifactId>
			<version>1.1.0-beta</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 解决m2e中提示“Plugin execution not covered by lifecycle configuration: 
					org.apache.maven.plugins:maven-scm-plugin:1.8.1:export (execution: export-icity-app-support, 
					phase: generate-sources”的错误 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-scm-plugin
										</artifactId>
										<versionRange>
											[1.8.1,)
										</versionRange>
										<goals>
											<goal>export</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- 解决m2e中提示"maven-dependency-plugin (goals "copy-dependencies", "unpack") 
					is not supported by m2e."的错误 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showWarnings>true</showWarnings>
					<encoding>${project.encoding}</encoding>
				</configuration>
			</plugin>
			<!-- 打包源代码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 由Maven源中获取程序的其它组件,如启停脚本等 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>unpack-app-support</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.xllapp</groupId>
									<artifactId>xllapp-app-support</artifactId>
									<version>1.1.0-beta</version>
									<type>jar</type>
									<outputDirectory>${support.dir}</outputDirectory>
									<excludes>META-INF/**</excludes>
								</artifactItem>
							</artifactItems>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--处理脚本资源,注:proccess-custom-script 必须在proccess-default-script,才能产出用项目自定义的脚本覆盖默认的脚本的效果 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<!-- 处理默认脚本 -->
					<execution>
						<id>proccess-default-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${script.dir}</outputDirectory>
							<encoding>${project.encoding}</encoding>
							<resources>
								<resource>
									<directory>${support.dir}/scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- 处理项目自定义脚本 -->
					<execution>
						<id>proccess-custom-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${script.dir}</outputDirectory>
							<encoding>${project.encoding}</encoding>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 在生成jar包时,排除resources目录下的配置文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<excludes>
						<exclude>*.xml</exclude>
						<exclude>*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- 生成最终的安装包 -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>${support.dir}/assembly/bundle.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>